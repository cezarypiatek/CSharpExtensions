name: pr-verification
on:
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build-extension:
    runs-on: windows-latest
    env: 
        DOTNET_NOLOGO: true
        DOTNET_CLI_TELEMETRY_OPTOUT: true
        RepositoryUrl: 'https://github.com/${{ github.repository }}'
        RepositoryBranch: '${{ github.ref }}'
        SourceRevisionId: '${{ github.sha }}'
        VersionSuffix: 'pr-${{github.event.number}}.${{ github.run_number }}'
        Configuration: Release
        SolutionPath: src\CSharpExtensions.sln
        Deterministic: true
        PackageReleaseNotes: 'https://github.com/${{ github.repository }}/releases'
    steps:
    - uses: actions/checkout@v2   
    - name: Setup .NET Core 5
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0'   
    - name: Setup .NET Core 3.1
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'   
    - name: Calculate next version
      uses: cezarypiatek/NextVersionGeneratorAction@0.4
      with:
        minor-pattern: '.*'
        output-to-env-variable: 'VersionPrefix'    
    - name: Materialize Signing Key
      id: write_sign_key_file
      uses: timheuer/base64-to-file@v1
      with:
        fileName: 'CSharpExtensions.snk'
        encodedString: ${{ secrets.SIGNING_KEY }}
    - name: Restore dependencies
      run: |
        dotnet nuget locals all --clear
        dotnet restore $env:SolutionPath         
    - name: Build extension
      run: dotnet build $env:SolutionPath 
      env:
        SignAssembly: true
        AssemblyOriginatorKeyFile: ${{ steps.write_sign_key_file.outputs.filePath }}     
    - name: Test extension
      run: dotnet test --no-build --verbosity normal $env:SolutionPath   
    - name: Collect artifacts - nugets
      uses: actions/upload-artifact@v2
      with:
        name: CSharpExtensions-Nugets
        path: '**/SmartAnalyzers.CSharpExtensions*.nupkg'
